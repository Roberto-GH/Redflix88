
package com.G3M4E5.Redflix88.vista;

import com.G3M4E5.Redflix88.Redflix88Application;
import com.G3M4E5.Redflix88.SpringContext;
import com.G3M4E5.Redflix88.modelos.Peliculas;
import com.G3M4E5.Redflix88.repositorios.PeliculasRepositorio;
import java.awt.Color;
import java.util.Optional;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
/**
 *
 * @author Roberto Londoño
 */
public class PanelPeliculas extends javax.swing.JPanel {
    
    PeliculasRepositorio peliculasRepositorio;
    /**
     * Creates new form PanelUsuarios
     */
    public PanelPeliculas() {
        Redflix88Application.runSpring();
        peliculasRepositorio = SpringContext.getBean(PeliculasRepositorio.class);
        
        initComponents();//seteo inicial
        botonProcesar.setEnabled(false);
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        deshabilitarCampos();
        botonProcesar.setBorder(BorderFactory.createLineBorder(new Color(0, 255, 102), 2));
        botonReset.setBorder(BorderFactory.createLineBorder(new Color(0, 255, 102), 2));
        campoTituloRequerido.setEditable(false);
        campoAnioRequerido.setEditable(false);
        campoResumenRequerido.setEditable(false);
        campoDirectorRequerido.setEditable(false);
        campoMensajes.setEditable(false);
        botonTrailer.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        botonBuscar = new javax.swing.JButton();
        Resumen = new javax.swing.JLabel();
        botonAgregar = new javax.swing.JButton();
        botonActualizar = new javax.swing.JButton();
        campoAnio = new javax.swing.JTextField();
        Anio = new javax.swing.JLabel();
        campoDirector = new javax.swing.JTextField();
        labelPeliculasTitulo = new javax.swing.JLabel();
        Director = new javax.swing.JLabel();
        botonEliminar = new javax.swing.JButton();
        campoTitulo = new javax.swing.JTextField();
        Titulo = new javax.swing.JLabel();
        campoMensajes = new javax.swing.JTextField();
        botonProcesar = new javax.swing.JButton();
        botonReset = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        campoResumen = new javax.swing.JTextArea();
        campoDirectorRequerido = new javax.swing.JTextField();
        campoAnioRequerido = new javax.swing.JTextField();
        campoTituloRequerido = new javax.swing.JTextField();
        campoResumenRequerido = new javax.swing.JTextField();
        botonTrailer = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setBackground(new java.awt.Color(0, 0, 0));

        botonBuscar.setText("Buscar");
        botonBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        Resumen.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Resumen.setForeground(new java.awt.Color(255, 255, 255));
        Resumen.setText("Resumen");

        botonAgregar.setText("Agregar");
        botonAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonActualizar.setText("Actualizar");
        botonActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });

        campoAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoAnioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoAnioKeyTyped(evt);
            }
        });

        Anio.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Anio.setForeground(new java.awt.Color(255, 255, 255));
        Anio.setText("Año");

        campoDirector.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoDirectorKeyReleased(evt);
            }
        });

        labelPeliculasTitulo.setFont(new java.awt.Font("Calibri Light", 1, 48)); // NOI18N
        labelPeliculasTitulo.setForeground(new java.awt.Color(255, 255, 255));
        labelPeliculasTitulo.setText("PELICULAS");

        Director.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Director.setForeground(new java.awt.Color(255, 255, 255));
        Director.setText("Director");

        botonEliminar.setText("Eliminar");
        botonEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        campoTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoTituloKeyReleased(evt);
            }
        });

        Titulo.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Titulo.setForeground(new java.awt.Color(255, 255, 255));
        Titulo.setText("Titulo");

        campoMensajes.setBackground(new java.awt.Color(0, 0, 0));
        campoMensajes.setFont(new java.awt.Font("Calibri Light", 3, 20)); // NOI18N
        campoMensajes.setForeground(new java.awt.Color(0, 255, 102));
        campoMensajes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoMensajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoMensajesActionPerformed(evt);
            }
        });

        botonProcesar.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        botonProcesar.setText("PROCESAR");
        botonProcesar.setBorder(null);
        botonProcesar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonProcesarActionPerformed(evt);
            }
        });

        botonReset.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        botonReset.setText("RESET");
        botonReset.setBorder(null);
        botonReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonResetActionPerformed(evt);
            }
        });

        campoResumen.setColumns(20);
        campoResumen.setLineWrap(true);
        campoResumen.setRows(5);
        campoResumen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoResumenKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(campoResumen);

        campoDirectorRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoDirectorRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoDirectorRequerido.setBorder(null);
        campoDirectorRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDirectorRequeridoActionPerformed(evt);
            }
        });

        campoAnioRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoAnioRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoAnioRequerido.setBorder(null);
        campoAnioRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoAnioRequeridoActionPerformed(evt);
            }
        });

        campoTituloRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoTituloRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoTituloRequerido.setBorder(null);
        campoTituloRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTituloRequeridoActionPerformed(evt);
            }
        });

        campoResumenRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoResumenRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoResumenRequerido.setBorder(null);
        campoResumenRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoResumenRequeridoActionPerformed(evt);
            }
        });

        botonTrailer.setText("Trailer");
        botonTrailer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTrailerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonAgregar)
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonActualizar))
                            .addComponent(labelPeliculasTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Titulo)
                            .addComponent(Anio)
                            .addComponent(Director)
                            .addComponent(Resumen))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoDirector, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(campoAnio, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(campoDirectorRequerido, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(campoTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(campoTituloRequerido)
                            .addComponent(campoResumenRequerido)
                            .addComponent(campoAnioRequerido))
                        .addGap(29, 29, 29)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(botonReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(botonTrailer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonEliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(campoMensajes)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPeliculasTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonTrailer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregar)
                    .addComponent(botonActualizar)
                    .addComponent(botonEliminar)
                    .addComponent(botonBuscar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(botonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(botonProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Titulo))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(Resumen))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(campoTituloRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8)
                        .addComponent(campoResumenRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Anio)
                            .addComponent(campoAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(campoAnioRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Director))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoDirectorRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(campoMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void borrarCampos(){ //textfield nuevamente en blanco
        campoTitulo.setText("");
        campoAnio.setText("");
        campoResumen.setText("");
        campoDirector.setText("");               
    }
    
    private void habilitarCampos(){//permite escribir en los texfield
        campoTitulo.setEnabled(true);
        campoResumen.setEnabled(true);
        campoAnio.setEnabled(true);
        campoDirector.setEnabled(true);        
    }
    
    private void deshabilitarCampos(){//NO permite escribir en los texfield
        campoTitulo.setEnabled(false);
        campoResumen.setEnabled(false);
        campoAnio.setEnabled(false);
        campoDirector.setEnabled(false);        
    }
    /*
    *Habilita los campas necesario para buscar
    *cambia color label Alias
    */
    private void deshabilitarCamposParaBuscar(){
        campoResumen.setEnabled(false);
        campoAnio.setEnabled(false);
        campoDirector.setEnabled(false);
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        botonAgregar.setEnabled(false);
        Titulo.setForeground(new Color(0, 255, 102));
        botonProcesar.setEnabled(true);
        campoTitulo.setEnabled(true);
    }
    //label cambian de color sugiriendo los campos a llenar
    private void preparacionParaAgregar(){
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        botonBuscar.setEnabled(false);
        botonAgregar.setEnabled(true);
        Titulo.setForeground(new Color(0, 255, 102));
        Resumen.setForeground(new Color(0, 255, 102));
        Anio.setForeground(new Color(0, 255, 102));
        Director.setForeground(new Color(0, 255, 102));        
    }
    //activa botones necesarios para actualizar
    private void preparacionParaActualizar(){
        botonActualizar.setEnabled(true);
        botonEliminar.setEnabled(false);
        botonBuscar.setEnabled(false);
        botonAgregar.setEnabled(false);
        botonProcesar.setEnabled(true);
        Titulo.setForeground(new Color(50, 250, 0));
        campoTitulo.setEnabled(false);
    }
    /*
    *Habilita los campos y cambia a color
    *inicial los label.
    *Usada para despues de buscar
    */
    private void habilitarCamposyBotones(){
        campoResumen.setEnabled(true);
        campoAnio.setEnabled(true);
        campoDirector.setEnabled(true);
        botonActualizar.setEnabled(true);
        botonEliminar.setEnabled(true);
        botonAgregar.setEnabled(true);
        botonBuscar.setEnabled(true);
        Titulo.setForeground(Color.WHITE);
        Resumen.setForeground(Color.WHITE);
        Anio.setForeground(Color.WHITE);
        Director.setForeground(Color.WHITE);
    }                        
    
    private void campoMensajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoMensajesActionPerformed
        
    }//GEN-LAST:event_campoMensajesActionPerformed
    /*
    Evento procesar, activa un CRUD dependiendo del boton habilitado
    en ese momento. Despues de procesar, habilita o deshabilita
    campos  y botones segun se necesite.
    */        
    private void botonProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonProcesarActionPerformed
        //BUSCA segun keymaster(alias)
        if(botonBuscar.isEnabled()) {
            habilitarCamposyBotones();
            String pelicula = campoTitulo.getText();
            Optional<Peliculas> resultado = peliculasRepositorio.findById(pelicula);
            if (resultado.isPresent()) {
                Peliculas peliculaEncontrado = resultado.get();
                campoResumen.setText(peliculaEncontrado.getResumen());                                
                int a = peliculaEncontrado.getAnio();
                campoAnio.setText(Integer.toString(a));                 
                campoDirector.setText(peliculaEncontrado.getDirector_iddirector());                
                botonProcesar.setEnabled(false);                
                campoMensajes.setText("Pelicula disponible");
                System.out.println("Pelicula disponible");
                deshabilitarCamposParaBuscar();
                botonProcesar.setEnabled(true);
                botonActualizar.setEnabled(true);
                botonEliminar.setEnabled(true);
                
                botonTrailer.setEnabled(true);
                
            } else {
                botonProcesar.setEnabled(true);
                campoMensajes.setText("Pelicula no encontrada");
                System.out.println("Pelicula no encontrada");
                deshabilitarCamposParaBuscar();
            }
            //AGREGA pelicula nuevo
        }else if (botonAgregar.isEnabled()) {
            habilitarCamposyBotones();
            String pelicula = campoTitulo.getText();
            Optional<Peliculas> resultado = peliculasRepositorio.findById(pelicula);
            if(resultado.isEmpty()) { //Devuelve true si la pelicula no esta en la tabla
                String titulo = campoTitulo.getText();
                String resumen = campoResumen.getText();
                int anio = Integer.parseInt(campoAnio.getText());
                String director = campoDirector.getText();
                Peliculas nuevo = new Peliculas(titulo, resumen, anio, director);
                peliculasRepositorio.save(nuevo);
                botonProcesar.setEnabled(false);
                campoMensajes.setText("Se registró correctamente la pelicula " + titulo);
                System.out.println("Se registró correctamente la pelicula " + titulo);
            }else {
                campoMensajes.setText("Lo sentimos la pelicula ya esta registrada");
                System.out.println("Lo sentimos la pelicula ya esta registrada");
            }
            

            //Actualiza usuario. Solo se puede usar despues de buscar
        }else if(botonActualizar.isEnabled()){
            String alias = campoTitulo.getText();
            Optional<Peliculas> resultado = peliculasRepositorio.findById(alias);
            if (resultado.isPresent()) {
                Peliculas usuarioEncontrado = resultado.get();
                usuarioEncontrado.setResumen(campoResumen.getText());
                usuarioEncontrado.setAnio(Integer.parseInt(campoAnio.getText()));            
                usuarioEncontrado.setDirector_iddirector(campoDirector.getText());
                peliculasRepositorio.save(usuarioEncontrado);
                botonActualizar.setEnabled(false);
                botonProcesar.setEnabled(false);
                campoMensajes.setText("Se actualizó correctamente el la pelicula " + campoTitulo.getText());
                System.out.println("Se actualizó correctamente el la pelicula " + campoTitulo.getText());
            }else {
                botonActualizar.setEnabled(true);
                campoMensajes.setText("Pelicula no encontrada");
                System.out.println("Pelicula no encontrada");

            }//Elimina usuario. Solo se puede usar despues de buscar
        }else if(botonEliminar.isEnabled()){

            String titulo = campoTitulo.getText();
            try{
                peliculasRepositorio.deleteById(titulo);
                campoMensajes.setText("Se eliminó exitosamente la pelicula " + titulo);
                System.out.println("Se eliminó exitosamente la pelicula " + titulo);
                botonProcesar.setEnabled(false);
                borrarCampos();
                botonEliminar.setEnabled(false);
            }
            catch(Exception e){
                campoMensajes.setText("Ocurrio un error al eliminar");
                System.out.println("Ocurrio un error al eliminar");
            }
        }
    }//GEN-LAST:event_botonProcesarActionPerformed
    //Evento reset = botones y campos a un estado inicial
    private void botonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonResetActionPerformed
        borrarCampos();
        campoMensajes.setText("");
        habilitarCamposyBotones();
        deshabilitarCampos();
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        botonProcesar.setEnabled(false);
        campoTituloRequerido.setText("");
        campoResumenRequerido.setText("");
        campoAnioRequerido.setText("");
        campoDirectorRequerido.setText("");
    }//GEN-LAST:event_botonResetActionPerformed
    //Evento eliminar
    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        Titulo.setForeground(Color.RED);       
        Resumen.setForeground(Color.RED);
        Anio.setForeground(Color.RED);
        Director.setForeground(Color.RED);
        botonBuscar.setEnabled(false);
        botonAgregar.setEnabled(false);
        botonActualizar.setEnabled(false);
        campoMensajes.setText("");
        habilitarCampos();
        campoTitulo.setEnabled(false);
    }//GEN-LAST:event_botonEliminarActionPerformed
    //Evento actualizar
    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        preparacionParaActualizar();
        habilitarCamposyBotones();
        botonBuscar.setEnabled(false);
        botonAgregar.setEnabled(false);
        botonEliminar.setEnabled(false);
        campoMensajes.setText("");
    }//GEN-LAST:event_botonActualizarActionPerformed
    //Evento buscar                                              
    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        borrarCampos();
        campoMensajes.setText("");
        deshabilitarCamposParaBuscar();
    }//GEN-LAST:event_botonBuscarActionPerformed
    //Evento Agregar
    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        borrarCampos();
        campoMensajes.setText("");
        preparacionParaAgregar();
        habilitarCampos();
        campoTituloRequerido.setText("*Requerido");
        campoResumenRequerido.setText("*Requerido");
        campoAnioRequerido.setText("*Requerido (Solo acepta números)");
        campoDirectorRequerido.setText("*Requerido");
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void campoDirectorRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDirectorRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDirectorRequeridoActionPerformed

    private void campoTituloRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTituloRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTituloRequeridoActionPerformed

    private void campoResumenRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoResumenRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoResumenRequeridoActionPerformed

    private void campoAnioRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoAnioRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoAnioRequeridoActionPerformed

    private void campoTituloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTituloKeyReleased
        Pattern pat = Pattern.compile("\\w");
        Matcher mat = pat.matcher(campoTitulo.getText());
        if(mat.find()){
            campoTituloRequerido.setText("");
        }
        else{
            campoTituloRequerido.setText("*Requerido");
        }    
        if(campoTituloRequerido.getText().isEmpty()
                &&campoDirectorRequerido.getText().isEmpty()
                &&campoAnioRequerido.getText().isEmpty()
                &&campoResumenRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
        if(campoTitulo.getText().equals("Los Vengadores")){
            botonTrailer.setVisible(true);
            botonTrailer.setEnabled(false);
            
        }
    }//GEN-LAST:event_campoTituloKeyReleased

    private void campoResumenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoResumenKeyReleased
        Pattern pat = Pattern.compile("\\w");
        Matcher mat = pat.matcher(campoResumen.getText());
        if(mat.find()){
            campoResumenRequerido.setText("");
        }
        else{
            campoResumenRequerido.setText("*Requerido");
        }    
        if(campoTituloRequerido.getText().isEmpty()
                &&campoDirectorRequerido.getText().isEmpty()
                &&campoAnioRequerido.getText().isEmpty()
                &&campoResumenRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
    }//GEN-LAST:event_campoResumenKeyReleased

    private void campoAnioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoAnioKeyReleased
        Pattern pat = Pattern.compile("\\d");
        Matcher mat = pat.matcher(campoAnio.getText());
        if(mat.find()){
            campoAnioRequerido.setText("");
        }
        else{
            campoAnioRequerido.setText("*Requerido (Solo acepta números)");
        }    
        if(campoTituloRequerido.getText().isEmpty()
                &&campoDirectorRequerido.getText().isEmpty()
                &&campoAnioRequerido.getText().isEmpty()
                &&campoResumenRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
    }//GEN-LAST:event_campoAnioKeyReleased

    private void campoAnioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoAnioKeyTyped
        char teclaPulsada = evt.getKeyChar();
        if(teclaPulsada<'0' || teclaPulsada>'9' || campoAnio.getText().length() == 4){
            evt.consume();            
        }
    }//GEN-LAST:event_campoAnioKeyTyped

    private void campoDirectorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoDirectorKeyReleased
        Pattern pat = Pattern.compile("\\w");
        Matcher mat = pat.matcher(campoDirector.getText());
        if(mat.find()){
            campoDirectorRequerido.setText("");
        }
        else{
            campoDirectorRequerido.setText("*Requerido");
        }    
        if(campoTituloRequerido.getText().isEmpty()
                &&campoDirectorRequerido.getText().isEmpty()
                &&campoAnioRequerido.getText().isEmpty()
                &&campoResumenRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
    }//GEN-LAST:event_campoDirectorKeyReleased
    VideoTrailer trailer = new VideoTrailer();
    private void botonTrailerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTrailerActionPerformed
        trailer.setVisible(true);
        botonTrailer.setEnabled(false);
    }//GEN-LAST:event_botonTrailerActionPerformed
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Anio;
    private javax.swing.JLabel Director;
    private javax.swing.JLabel Resumen;
    private javax.swing.JLabel Titulo;
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonProcesar;
    private javax.swing.JButton botonReset;
    private javax.swing.JButton botonTrailer;
    private javax.swing.JTextField campoAnio;
    private javax.swing.JTextField campoAnioRequerido;
    private javax.swing.JTextField campoDirector;
    private javax.swing.JTextField campoDirectorRequerido;
    private javax.swing.JTextField campoMensajes;
    private javax.swing.JTextArea campoResumen;
    private javax.swing.JTextField campoResumenRequerido;
    private javax.swing.JTextField campoTitulo;
    private javax.swing.JTextField campoTituloRequerido;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelPeliculasTitulo;
    // End of variables declaration//GEN-END:variables
}
