
package com.G3M4E5.Redflix88.vista;

import com.G3M4E5.Redflix88.Redflix88Application;
import com.G3M4E5.Redflix88.SpringContext;
import com.G3M4E5.Redflix88.modelos.Usuario;
import com.G3M4E5.Redflix88.repositorios.UsuarioRepositorio;
import java.awt.Color;
import java.util.Optional;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
/**
 *
 * @author Roberto Londoño
 */
public class PanelUsuarios extends javax.swing.JPanel {
    
    UsuarioRepositorio usuarioRepositorio;
    /**
     * Creates new form PanelUsuarios
     */
    public PanelUsuarios() {
        Redflix88Application.runSpring();
        usuarioRepositorio = SpringContext.getBean(UsuarioRepositorio.class);
        
        initComponents();//seteo inicial
        botonProcesar.setEnabled(false);
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        deshabilitarCampos();
        botonProcesar.setBorder(BorderFactory.createLineBorder(new Color(0, 255, 102), 2));
        botonReset.setBorder(BorderFactory.createLineBorder(new Color(0, 255, 102), 2));
        campoAliasRequerido.setEditable(false);
        campoNombresRequerido.setEditable(false);
        campoApellidosRequerido.setEditable(false);
        campoCelularRequerido.setEditable(false);
        campoEmailRequerido.setEditable(false);
        campoContraseniaRequerido.setEditable(false);
        campoMensajes.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonBuscar = new javax.swing.JButton();
        Nombres = new javax.swing.JLabel();
        botonAgregar = new javax.swing.JButton();
        campoApellidos = new javax.swing.JTextField();
        botonActualizar = new javax.swing.JButton();
        Apellidos = new javax.swing.JLabel();
        campoEmail = new javax.swing.JTextField();
        Email = new javax.swing.JLabel();
        labelUsuariosTitulo = new javax.swing.JLabel();
        Celular = new javax.swing.JLabel();
        botonEliminar = new javax.swing.JButton();
        campoAlias = new javax.swing.JTextField();
        Contraseña = new javax.swing.JLabel();
        Alias = new javax.swing.JLabel();
        campoMensajes = new javax.swing.JTextField();
        campoNombres = new javax.swing.JTextField();
        botonProcesar = new javax.swing.JButton();
        botonReset = new javax.swing.JButton();
        campoCelular = new javax.swing.JTextField();
        campoContrasenia = new javax.swing.JPasswordField();
        campoNombresRequerido = new javax.swing.JTextField();
        campoAliasRequerido = new javax.swing.JTextField();
        campoApellidosRequerido = new javax.swing.JTextField();
        campoEmailRequerido = new javax.swing.JTextField();
        campoCelularRequerido = new javax.swing.JTextField();
        campoContraseniaRequerido = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 0, 0));

        botonBuscar.setText("Buscar");
        botonBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        Nombres.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Nombres.setForeground(new java.awt.Color(255, 255, 255));
        Nombres.setText("Nombres");

        botonAgregar.setText("Agregar");
        botonAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        campoApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoApellidosKeyReleased(evt);
            }
        });

        botonActualizar.setText("Actualizar");
        botonActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });

        Apellidos.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Apellidos.setForeground(new java.awt.Color(255, 255, 255));
        Apellidos.setText("Apellidos");

        campoEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoEmailKeyReleased(evt);
            }
        });

        Email.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Email.setForeground(new java.awt.Color(255, 255, 255));
        Email.setText("Email");

        labelUsuariosTitulo.setFont(new java.awt.Font("Calibri Light", 1, 48)); // NOI18N
        labelUsuariosTitulo.setForeground(new java.awt.Color(255, 255, 255));
        labelUsuariosTitulo.setText("USUARIOS");

        Celular.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Celular.setForeground(new java.awt.Color(255, 255, 255));
        Celular.setText("Celular");

        botonEliminar.setText("Eliminar");
        botonEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        campoAlias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoAliasKeyReleased(evt);
            }
        });

        Contraseña.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Contraseña.setForeground(new java.awt.Color(255, 255, 255));
        Contraseña.setText("Contraseña");

        Alias.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Alias.setForeground(new java.awt.Color(255, 255, 255));
        Alias.setText("Alias");

        campoMensajes.setBackground(new java.awt.Color(0, 0, 0));
        campoMensajes.setFont(new java.awt.Font("Calibri Light", 3, 20)); // NOI18N
        campoMensajes.setForeground(new java.awt.Color(0, 255, 102));
        campoMensajes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoMensajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoMensajesActionPerformed(evt);
            }
        });

        campoNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoNombresKeyReleased(evt);
            }
        });

        botonProcesar.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        botonProcesar.setText("PROCESAR");
        botonProcesar.setBorder(null);
        botonProcesar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonProcesarActionPerformed(evt);
            }
        });

        botonReset.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        botonReset.setText("RESET");
        botonReset.setBorder(null);
        botonReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonResetActionPerformed(evt);
            }
        });

        campoCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoCelularKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoCelularKeyTyped(evt);
            }
        });

        campoContrasenia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoContraseniaKeyReleased(evt);
            }
        });

        campoNombresRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoNombresRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoNombresRequerido.setBorder(null);
        campoNombresRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNombresRequeridoActionPerformed(evt);
            }
        });

        campoAliasRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoAliasRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoAliasRequerido.setBorder(null);
        campoAliasRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoAliasRequeridoActionPerformed(evt);
            }
        });

        campoApellidosRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoApellidosRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoApellidosRequerido.setBorder(null);
        campoApellidosRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoApellidosRequeridoActionPerformed(evt);
            }
        });

        campoEmailRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoEmailRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoEmailRequerido.setBorder(null);
        campoEmailRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoEmailRequeridoActionPerformed(evt);
            }
        });

        campoCelularRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoCelularRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoCelularRequerido.setBorder(null);
        campoCelularRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCelularRequeridoActionPerformed(evt);
            }
        });

        campoContraseniaRequerido.setBackground(new java.awt.Color(0, 0, 0));
        campoContraseniaRequerido.setForeground(new java.awt.Color(255, 0, 0));
        campoContraseniaRequerido.setBorder(null);
        campoContraseniaRequerido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoContraseniaRequeridoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(botonAgregar)
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addComponent(botonActualizar))
                            .addComponent(labelUsuariosTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(62, 62, 62))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Nombres)
                                .addGap(281, 281, 281))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Alias)
                                .addGap(82, 82, 82)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(campoNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(campoAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(campoAliasRequerido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoNombresRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Apellidos)
                                        .addComponent(Email))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(campoApellidosRequerido)
                                        .addComponent(campoEmailRequerido, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(campoEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(campoApellidos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Contraseña)
                                        .addComponent(Celular))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(campoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(campoCelularRequerido)
                                            .addComponent(campoContraseniaRequerido, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(campoContrasenia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))))))
                        .addGap(30, 30, 30)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonEliminar)
                    .addComponent(botonReset, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                    .addComponent(botonProcesar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(campoMensajes)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(labelUsuariosTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregar)
                    .addComponent(botonActualizar)
                    .addComponent(botonEliminar)
                    .addComponent(botonBuscar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(botonProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(botonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Alias)
                                .addComponent(campoAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(campoAliasRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Nombres)
                                    .addComponent(campoNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoNombresRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoApellidos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Apellidos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoApellidosRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Email)
                            .addComponent(campoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(campoEmailRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Celular)
                            .addComponent(campoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoCelularRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Contraseña))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoContraseniaRequerido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void borrarCampos(){ //textfield nuevamente en blanco
        campoNombres.setText("");
        campoApellidos.setText("");
        campoEmail.setText("");
        campoCelular.setText("");
        campoContrasenia.setText("");
        campoAlias.setText("");        
    }
    
    private void habilitarCampos(){//permite escribir en los texfield
        campoNombres.setEnabled(true);
        campoApellidos.setEnabled(true);
        campoEmail.setEnabled(true);
        campoCelular.setEnabled(true);
        campoContrasenia.setEnabled(true);        
    }
    
    private void deshabilitarCampos(){//NO permite escribir en los texfield
        campoNombres.setEnabled(false);
        campoApellidos.setEnabled(false);
        campoEmail.setEnabled(false);
        campoCelular.setEnabled(false);
        campoContrasenia.setEnabled(false);
        campoAlias.setEnabled(false);        
    }
    /*
    *Habilita los campas necesario para buscar
    *cambia color label Alias
    */
    private void deshabilitarCamposParaBuscar(){
        campoNombres.setEnabled(false);
        campoApellidos.setEnabled(false);
        campoEmail.setEnabled(false);
        campoCelular.setEnabled(false);
        campoContrasenia.setEnabled(false);
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        botonAgregar.setEnabled(false);
        Alias.setForeground(new Color(0, 255, 102));
        botonProcesar.setEnabled(true);
        campoAlias.setEnabled(true);
    }
    //label cambian de color sugiriendo los campos a llenar
    private void preparacionParaAgregar(){
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        botonBuscar.setEnabled(false);
        botonAgregar.setEnabled(true);
        botonProcesar.setEnabled(false);
        Alias.setForeground(new Color(0, 255, 102));
        Nombres.setForeground(new Color(0, 255, 102));
        Apellidos.setForeground(new Color(0, 255, 102));
        Email.setForeground(new Color(0, 255, 102));
        Celular.setForeground(new Color(0, 255, 102));
        Contraseña.setForeground(new Color(0, 255, 102));
    }
    //activa botones necesarios para actualizar
    private void preparacionParaActualizar(){
        botonActualizar.setEnabled(true);
        botonEliminar.setEnabled(false);
        botonBuscar.setEnabled(false);
        botonAgregar.setEnabled(false);
        botonProcesar.setEnabled(true);
        Alias.setForeground(new Color(0, 255, 102));
    }
    /*
    *Habilita los campos y cambia a color
    *inicial los label.
    *Usada para despues de buscar
    */
    private void habilitarCamposyBotones(){
        campoNombres.setEnabled(true);
        campoApellidos.setEnabled(true);
        campoEmail.setEnabled(true);
        campoCelular.setEnabled(true);
        campoContrasenia.setEnabled(true);
        botonActualizar.setEnabled(true);
        botonEliminar.setEnabled(true);
        botonAgregar.setEnabled(true);
        botonBuscar.setEnabled(true);
        Alias.setForeground(Color.WHITE);       
        Nombres.setForeground(Color.WHITE);
        Apellidos.setForeground(Color.WHITE);
        Email.setForeground(Color.WHITE);
        Celular.setForeground(Color.WHITE);
        Contraseña.setForeground(Color.WHITE);
    }
    //Evento buscar
    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        borrarCampos();
        campoMensajes.setText("");
        deshabilitarCamposParaBuscar();                
    }//GEN-LAST:event_botonBuscarActionPerformed
    //Evento Agregar
    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        borrarCampos();
        campoMensajes.setText("");
        preparacionParaAgregar();
        habilitarCampos();
        campoAlias.setEnabled(true);
        campoAliasRequerido.setText("*Requerido");
        campoNombresRequerido.setText("*Requerido");
        campoApellidosRequerido.setText("*Requerido");
        campoCelularRequerido.setText("*Requerido (Solo acepta números)");
        campoEmailRequerido.setText("*Requerido");
        campoContraseniaRequerido.setText("*Requerido");
    }//GEN-LAST:event_botonAgregarActionPerformed
    //Evento Campo mensajes
    private void campoMensajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoMensajesActionPerformed
     
    }//GEN-LAST:event_campoMensajesActionPerformed
    
    /*
    Evento procesar, activa un CRUD dependiendo del boton habilitado
    en ese momento. Despues de procesar, habilita o deshabilita
    campos  y botones segun se necesite.
    */
    private void botonProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonProcesarActionPerformed
        //BUSCA segun keymaster(alias)
        if(botonBuscar.isEnabled()) {
            habilitarCamposyBotones();
            String alias = campoAlias.getText();
            Optional<Usuario> resultado = usuarioRepositorio.findById(alias);
            if (resultado.isPresent()) {
                Usuario usuarioEncontrado = resultado.get();
                campoNombres.setText(usuarioEncontrado.getNombres());
                campoApellidos.setText(usuarioEncontrado.getApellidos());
                campoEmail.setText(usuarioEncontrado.getEmail());
                campoCelular.setText(usuarioEncontrado.getCelular());
                campoContrasenia.setText(usuarioEncontrado.getContrasenia());
                botonProcesar.setEnabled(false);
                campoMensajes.setText("Usuario encontrado");
                System.out.println("Usuario encontrado");
                deshabilitarCamposParaBuscar();
                botonProcesar.setEnabled(true);
                botonActualizar.setEnabled(true);
                botonEliminar.setEnabled(true);
            } else {
                botonProcesar.setEnabled(true);
                campoMensajes.setText("Lo sentimos usuario no encontrado");
                System.out.println("Lo sentimos usuario no encontrado");
                deshabilitarCamposParaBuscar();
            }
        //AGREGA usuario nuevo    
        }else if (botonAgregar.isEnabled()) {
            habilitarCamposyBotones();
            String aliasbuscado = campoAlias.getText();
            Optional<Usuario> resultado = usuarioRepositorio.findById(aliasbuscado);
            if(resultado.isEmpty()) { //Devuelve true si el usuario no esta en la tabla
                String alias = campoAlias.getText();
                String nombres = campoNombres.getText();
                String apellidos = campoApellidos.getText();
                String email = campoEmail.getText();
                String celular = campoCelular.getText();
                String contrasenia = campoContrasenia.getText();
                Usuario nuevo = new Usuario(alias, nombres, apellidos, email, celular, contrasenia);
                usuarioRepositorio.save(nuevo);
                botonProcesar.setEnabled(false);
                campoMensajes.setText("Se registró exitosamente el usuario " + alias);
                System.out.println("Se registró exitosamente el usuario " + alias);
            }else {
                campoMensajes.setText("Lo sentimos el usuario no se encuentra disponible");
                System.out.println("Lo sentimos el usuario no se encuentra disponible");
            }
            
            
        //Actualiza usuario. Solo se puede usar despues de buscar    
        }else if(botonActualizar.isEnabled()){
            String alias = campoAlias.getText();
            Optional<Usuario> resultado = usuarioRepositorio.findById(alias);
            if (resultado.isPresent()) {
                Usuario usuarioEncontrado = resultado.get();
                usuarioEncontrado.setNombres(campoNombres.getText());
                usuarioEncontrado.setApellidos(campoApellidos.getText());
                usuarioEncontrado.setEmail(campoEmail.getText());
                usuarioEncontrado.setCelular(campoCelular.getText());
                usuarioEncontrado.setContrasenia(campoContrasenia.getText());
                usuarioRepositorio.save(usuarioEncontrado);                                
                botonActualizar.setEnabled(false);                
                botonProcesar.setEnabled(false);
                campoMensajes.setText("Se actualizó correctamente el usuario " + campoNombres.getText()
                                    + " " + campoApellidos.getText());
                System.out.println("Se actualizó correctamente el usuario " + campoNombres.getText()
                                    + " " + campoApellidos.getText());
            }else {
                botonActualizar.setEnabled(true);
                campoMensajes.setText("Lo sentimos el usuario no se encuentra disponible");
                System.out.println("Lo sentimos el usuario no se encuentra disponible");
                
            }//Elimina usuario. Solo se puede usar despues de buscar
        }else if(botonEliminar.isEnabled()){
            
            String alias = campoAlias.getText();        
            try{
                usuarioRepositorio.deleteById(alias);
                campoMensajes.setText("Se eliminó exitosamente el usuario con alias: " + alias);
                System.out.println("Se eliminó exitosamente el usuario con alias: " + alias);
                botonProcesar.setEnabled(false);
                borrarCampos();
                botonEliminar.setEnabled(false);
            }
            catch(Exception e){
                campoMensajes.setText("Ocurrio un error al eliminar");
                System.out.println("Ocurrio un error al eliminar");
            }
        }
    }//GEN-LAST:event_botonProcesarActionPerformed
    //Evento reset = botones y campos a un estado inicial
    private void botonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonResetActionPerformed
        borrarCampos();
        campoMensajes.setText("");
        habilitarCamposyBotones();
        deshabilitarCampos();
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        botonProcesar.setEnabled(false);
        campoAliasRequerido.setText("");
        campoNombresRequerido.setText("");
        campoApellidosRequerido.setText("");
        campoCelularRequerido.setText("");
        campoContraseniaRequerido.setText("");
        campoEmailRequerido.setText("");
    }//GEN-LAST:event_botonResetActionPerformed
    //Evento actualizar
    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        preparacionParaActualizar();
        habilitarCamposyBotones();
        botonBuscar.setEnabled(false);
        botonAgregar.setEnabled(false);
        botonEliminar.setEnabled(false);
        campoMensajes.setText("");
        campoAlias.setEnabled(false);
    }//GEN-LAST:event_botonActualizarActionPerformed
    //Evento eliminar
    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        Alias.setForeground(Color.RED);       
        Nombres.setForeground(Color.RED);
        Apellidos.setForeground(Color.RED);
        Email.setForeground(Color.RED);
        Celular.setForeground(Color.RED);
        Contraseña.setForeground(Color.RED);
        botonBuscar.setEnabled(false);
        botonAgregar.setEnabled(false);
        botonActualizar.setEnabled(false);
        campoMensajes.setText("");
        habilitarCampos();
        campoAlias.setEnabled(false);
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void campoNombresRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNombresRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNombresRequeridoActionPerformed

    private void campoAliasRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoAliasRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoAliasRequeridoActionPerformed

    private void campoApellidosRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoApellidosRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoApellidosRequeridoActionPerformed

    private void campoEmailRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoEmailRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoEmailRequeridoActionPerformed

    private void campoCelularRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCelularRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCelularRequeridoActionPerformed

    private void campoContraseniaRequeridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoContraseniaRequeridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoContraseniaRequeridoActionPerformed

    private void campoAliasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoAliasKeyReleased
        Pattern pat = Pattern.compile("\\w");
        Matcher mat = pat.matcher(campoAlias.getText());
        if(mat.find()){
            campoAliasRequerido.setText("");
        }
        else{
            campoAliasRequerido.setText("*Requerido");
        }    
        if(campoAliasRequerido.getText().isEmpty()
                &&campoNombresRequerido.getText().isEmpty()
                &&campoApellidosRequerido.getText().isEmpty()
                &&campoCelularRequerido.getText().isEmpty()
                &&campoEmailRequerido.getText().isEmpty()
                &&campoContraseniaRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
    }//GEN-LAST:event_campoAliasKeyReleased

    private void campoNombresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNombresKeyReleased
        Pattern pat = Pattern.compile("\\w");
        Matcher mat = pat.matcher(campoNombres.getText());
        if(mat.find()){
            campoNombresRequerido.setText("");
        }
        else{
            campoNombresRequerido.setText("*Requerido");
        }    
        if(campoAliasRequerido.getText().isEmpty()
                &&campoNombresRequerido.getText().isEmpty()
                &&campoApellidosRequerido.getText().isEmpty()
                &&campoCelularRequerido.getText().isEmpty()
                &&campoEmailRequerido.getText().isEmpty()
                &&campoContraseniaRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
    }//GEN-LAST:event_campoNombresKeyReleased

    private void campoApellidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoApellidosKeyReleased
        Pattern pat = Pattern.compile("\\w");
        Matcher mat = pat.matcher(campoApellidos.getText());
        if(mat.find()){
            campoApellidosRequerido.setText("");
        }
        else{
            campoApellidosRequerido.setText("*Requerido");
        }    
        if(campoAliasRequerido.getText().isEmpty()
                &&campoNombresRequerido.getText().isEmpty()
                &&campoApellidosRequerido.getText().isEmpty()
                &&campoCelularRequerido.getText().isEmpty()
                &&campoEmailRequerido.getText().isEmpty()
                &&campoContraseniaRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
    }//GEN-LAST:event_campoApellidosKeyReleased

    private void campoEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoEmailKeyReleased
        Pattern pat = Pattern.compile("^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$");//validar
        Matcher mat = pat.matcher(campoEmail.getText());
        //"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[\\w\\-\\_]+)*@([A-Za_z0-9-]+\\.) + [A-Za_z]{2,4}$"
        if(mat.matches()){
            campoEmailRequerido.setText("");
        }
        else{
            campoEmailRequerido.setText("*Ingrese un correo valido");
        }    
        
        
        if(campoAliasRequerido.getText().isEmpty()
                &&campoNombresRequerido.getText().isEmpty()
                &&campoApellidosRequerido.getText().isEmpty()
                &&campoCelularRequerido.getText().isEmpty()
                &&campoEmailRequerido.getText().isEmpty()
                &&campoContraseniaRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
    }//GEN-LAST:event_campoEmailKeyReleased

    private void campoCelularKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoCelularKeyReleased
        Pattern pat = Pattern.compile("\\d");
        Matcher mat = pat.matcher(campoCelular.getText());
        if(mat.find()){
            campoCelularRequerido.setText("");
        }
        else{
            campoCelularRequerido.setText("*Requerido (Solo acepta números)");
        }    
        if(campoAliasRequerido.getText().isEmpty()
                &&campoNombresRequerido.getText().isEmpty()
                &&campoApellidosRequerido.getText().isEmpty()
                &&campoCelularRequerido.getText().isEmpty()
                &&campoEmailRequerido.getText().isEmpty()
                &&campoContraseniaRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
    }//GEN-LAST:event_campoCelularKeyReleased

    private void campoContraseniaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoContraseniaKeyReleased
        Pattern pat = Pattern.compile("\\w");
        Matcher mat = pat.matcher(campoContrasenia.getText());
        if(mat.find()){
            campoContraseniaRequerido.setText("");
        }
        else{
            campoContraseniaRequerido.setText("*Requerido");
        }    
        if(campoAliasRequerido.getText().isEmpty()
                &&campoNombresRequerido.getText().isEmpty()
                &&campoApellidosRequerido.getText().isEmpty()
                &&campoCelularRequerido.getText().isEmpty()
                &&campoEmailRequerido.getText().isEmpty()
                &&campoContraseniaRequerido.getText().isEmpty()){
            botonProcesar.setEnabled(true);
        }else{
            botonProcesar.setEnabled(false);
        }
    }//GEN-LAST:event_campoContraseniaKeyReleased

    private void campoCelularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoCelularKeyTyped
        char teclaPulsada = evt.getKeyChar();
        if(teclaPulsada<'0' || teclaPulsada>'9' || campoCelular.getText().length() == 10){
            evt.consume();            
        }
    }//GEN-LAST:event_campoCelularKeyTyped

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Alias;
    private javax.swing.JLabel Apellidos;
    private javax.swing.JLabel Celular;
    private javax.swing.JLabel Contraseña;
    private javax.swing.JLabel Email;
    private javax.swing.JLabel Nombres;
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonProcesar;
    private javax.swing.JButton botonReset;
    private javax.swing.JTextField campoAlias;
    private javax.swing.JTextField campoAliasRequerido;
    private javax.swing.JTextField campoApellidos;
    private javax.swing.JTextField campoApellidosRequerido;
    private javax.swing.JTextField campoCelular;
    private javax.swing.JTextField campoCelularRequerido;
    private javax.swing.JPasswordField campoContrasenia;
    private javax.swing.JTextField campoContraseniaRequerido;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoEmailRequerido;
    private javax.swing.JTextField campoMensajes;
    private javax.swing.JTextField campoNombres;
    private javax.swing.JTextField campoNombresRequerido;
    private javax.swing.JLabel labelUsuariosTitulo;
    // End of variables declaration//GEN-END:variables
}
